<?xml version="1.0" encoding="utf-8"?>
<hibernate-mapping assembly="" namespace="" xmlns="urn:nhibernate-mapping-2.2">
  <class entity-name="Service" table="__Service" lazy="true" >
    <cache usage="read-write"/>
    <id name="Id" column="Id" type="Int32">
      <generator class="identity" />
    </id>
    <property name="ConnectionId" type="Int32">
      <column name="ConnectionId" sql-type="int" not-null="true" />
    </property>
    <property name="FolderId" type="Int32">
      <column name="FolderId" sql-type="int" not-null="true" />
    </property>
    <property name="Name" type="String">
      <column name="Name" sql-type="nvarchar(max)" not-null="false" />
    </property>
    <property name="State" type="Int32">
      <column name="State" sql-type="int" not-null="true" />
    </property>
    <property name="SpatialReference" type="Int32">
      <column name="SpatialReference" sql-type="int" />
    </property>
    <property name="ServiceType" type="Int32">
      <column name="ServiceType" sql-type="int" not-null="true" />
    </property>
    <property name="IsCached" type="bool">
      <column name="IsCached" sql-type="bit" not-null="true" />
    </property>
    <property name="IsWMSEnabled" type="bool">
      <column name="IsWMSEnabled" sql-type="bit" not-null="false" />
    </property>
      <property name="IsAllowAnonymous" type="bool">
      <column name="IsAllowAnonymous" sql-type="bit" not-null="true" />
    </property>
    <property name="IsStopped" type="bool">
      <column name="IsStopped" sql-type="bit" not-null="false" />
    </property>
    <property name="MinScale" type="Int32">
      <column name="MinScale" sql-type="int" />
    </property>
    <property name="MaxScale" type="Int32">
      <column name="MaxScale" sql-type="int"  />
    </property>
    <property name="MaxRecordCount" type="Int32">
      <column name="MaxRecordCount" sql-type="int"  />
    </property>
    <bag name="Layer">
      <key column="ServiceId" />
      <one-to-many class="Layer" />
    </bag>
  </class>
</hibernate-mapping>